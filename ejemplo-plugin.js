// üìù EJEMPLO: C√≥mo crear un plugin personalizado
// Guarda este archivo en la carpeta 'plugins/' para que funcione

export default {
  // Nombre del comando (sin prefijos)
  command: 'ejemplo',
  
  // Categor√≠a para el men√∫ autom√°tico
  category: 'Ejemplos',
  
  // Descripci√≥n que aparecer√° en el men√∫
  description: 'Plugin de ejemplo para demostrar la funcionalidad',
  
  // Funci√≥n principal que se ejecuta al usar el comando
  async execute(sock, msg, args) {
    const jid = msg.key.remoteJid // Chat donde se envi√≥ el mensaje
    
    // Ejemplo 1: Mensaje simple
    if (args.length === 0) {
      await sock.sendMessage(jid, {
        text: 'üéØ ¬°Este es un plugin de ejemplo!\n\nUsa: ejemplo hola [nombre]'
      })
      return
    }
    
    // Ejemplo 2: Usar argumentos
    if (args[0] === 'hola') {
      const nombre = args.slice(1).join(' ') || 'Usuario'
      await sock.sendMessage(jid, {
        text: `üëã ¬°Hola ${nombre}! Bienvenido al bot.`
      })
      return
    }
    
    // Ejemplo 3: Botones interactivos
    if (args[0] === 'botones') {
      const buttons = [
        { id: 'btn1', text: '‚úÖ Opci√≥n 1' },
        { id: 'btn2', text: '‚ùå Opci√≥n 2' }
      ]
      
      await sock.sendMessage(jid, {
        text: 'Elige una opci√≥n:',
        footer: 'Ejemplo de botones',
        buttons: buttons.map((btn, index) => ({
          buttonId: btn.id,
          buttonText: { displayText: btn.text },
          type: 1
        })),
        headerType: 1
      })
      return
    }
    
    // Ejemplo 4: Validaci√≥n y error
    await sock.sendMessage(jid, {
      text: '‚ùå Opci√≥n no v√°lida.\n\n*Opciones disponibles:*\n‚Ä¢ ejemplo hola [nombre]\n‚Ä¢ ejemplo botones'
    })
  }
}

// üîß INSTRUCCIONES DE USO:
// 1. Copia este archivo a la carpeta 'plugins/'
// 2. Ren√≥mbralo (ej: 'micomando.js')
// 3. Cambia el 'command' por tu comando deseado
// 4. Reinicia el bot
// 5. El comando aparecer√° autom√°ticamente en el men√∫